{"version":3,"sources":["webpack:///../../../src/components/VIcon/VIcon.ts","webpack:///../../../src/components/VThemeProvider/VThemeProvider.ts","webpack:///../../../src/mixins/delayable/index.ts","webpack:///../../../src/mixins/activatable/index.ts","webpack:///../../../src/mixins/dependent/index.ts","webpack:///../../../src/mixins/detachable/index.ts","webpack:///../../../src/components/VOverlay/VOverlay.ts","webpack:///../../../src/components/VOverlay/index.ts","webpack:///../../../src/mixins/overlayable/index.ts","webpack:///../../../src/mixins/returnable/index.ts","webpack:///../../../src/mixins/stackable/index.ts","webpack:///../../../src/directives/click-outside/index.ts","webpack:///../../../src/components/VDialog/VDialog.ts","webpack:///../../../src/mixins/bootable/index.ts","webpack:///../../src/util/dom.ts"],"names":["isFontAwesome5","some","val","iconType","isSvgPath","test","icon","SIZE_MAP","VIcon","name","props","dense","disabled","left","right","size","Number","tag","type","required","default","computed","medium","hasClickListener","Boolean","this","listeners$","click","methods","getIcon","iconName","$slots","text","getSize","sizes","xSmall","small","large","xLarge","explicitSize","key","getDefaultData","staticClass","class","attrs","attrs$","on","getSvgWrapperData","fontSize","wrapperData","style","height","width","undefined","applyColors","data","themeClasses","renderFontIcon","newChildren","delimiterIndex","isMaterialIcon","h","renderSvgIcon","svgData","xmlns","viewBox","role","d","renderSvgIconComponent","component","render","$_wrapperFor","functional","children","root","isDark","node","openDelay","closeDelay","openTimeout","closeTimeout","clearDelay","clearTimeout","runDelay","delay","parseInt","setTimeout","cb","open","close","baseMixins","mixins","activator","validator","includes","internalActivator","openOnHover","openOnFocus","activatorElement","activatorNode","events","listeners","watch","mounted","slotType","beforeDestroy","addActivatorEvents","keys","Object","genActivator","genActivatorAttributes","String","genActivatorListeners","e","getActivator","target","length","vm","m","Node","getContentSlot","getValueProxy","self","removeActivatorEvents","resetActivator","searchChildren","results","index","child","closeDependents","isActive","isDependent","openDependents","getOpenDependents","getOpenDependentElements","result","getClickableDependentElements","$refs","overlay","validateAttachTarget","attach","contentClass","hasDetached","hasContent","beforeMount","Array","deactivated","content","console","getScopeIdAttrs","scopeId","initDetach","_isDestroyed","document","absolute","color","dark","opacity","value","zIndex","__scrim","setBackgroundColor","computedOpacity","$createElement","classes","styles","genContent","hideOverlay","overlayColor","overlayOpacity","animationFrame","genOverlay","createOverlay","propsData","parent","$el","requestAnimationFrame","removeOverlay","showScroll","cancelAnimationFrame","scrollListener","up","down","checkPath","hasScrollbar","el","window","shouldScroll","alreadyAtTop","alreadyAtBottom","scrollingUp","delta","scrollingDown","isInside","path","composedPath","dialog","selected","hideScroll","$vuetify","breakpoint","passive","returnValue","originalValue","save","stackElement","stackExclude","stackMinZIndex","activeZIndex","getMaxZIndex","exclude","base","zis","activeElements","Math","defaultConditional","checkEvent","checkIsActive","elements","binding","directive","handler","handleShadow","callback","ClickOutside","inserted","onClick","onMousedown","app","lastMousedownWasOutside","unbind","directives","fullscreen","light","maxWidth","noClickAnimation","origin","persistent","retainFocus","scrollable","transition","activatedBy","animate","animateTimeout","previousActiveElement","contentClasses","hasActivator","$scopedSlots","created","$attrs","hasOwnProperty","animateClick","closeConditional","contains","show","bind","onClickOutside","onKeydown","onFocusin","focusable","querySelectorAll","showLazyContent","tabindex","keydown","ref","genTransition","appear","genInnerContent","include","transformOrigin","eager","isBooted","composed"],"mappings":"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","file":"js/chunk-b5565fd6.590481a5.js","sourcesContent":["import './VIcon.sass'\n\n// Mixins\nimport BindsAttrs from '../../mixins/binds-attrs'\nimport Colorable from '../../mixins/colorable'\nimport Sizeable from '../../mixins/sizeable'\nimport Themeable from '../../mixins/themeable'\n\n// Util\nimport { convertToUnit, keys, remapInternalIcon } from '../../util/helpers'\n\n// Types\nimport Vue, { CreateElement, VNode, VNodeChildren, VNodeData } from 'vue'\nimport mixins from '../../util/mixins'\nimport { VuetifyIcon, VuetifyIconComponent } from 'vuetify/types/services/icons'\n\nenum SIZE_MAP {\n  xSmall = '12px',\n  small = '16px',\n  default = '24px',\n  medium = '28px',\n  large = '36px',\n  xLarge = '40px'\n}\n\nfunction isFontAwesome5 (iconType: string): boolean {\n  return ['fas', 'far', 'fal', 'fab', 'fad', 'fak'].some(val => iconType.includes(val))\n}\n\nfunction isSvgPath (icon: string): boolean {\n  return (/^[mzlhvcsqta]\\s*[-+.0-9][^mlhvzcsqta]+/i.test(icon) && /[\\dz]$/i.test(icon) && icon.length > 4)\n}\n\nconst VIcon = mixins(\n  BindsAttrs,\n  Colorable,\n  Sizeable,\n  Themeable\n  /* @vue/component */\n).extend({\n  name: 'v-icon',\n\n  props: {\n    dense: Boolean,\n    disabled: Boolean,\n    left: Boolean,\n    right: Boolean,\n    size: [Number, String],\n    tag: {\n      type: String,\n      required: false,\n      default: 'i',\n    },\n  },\n\n  computed: {\n    medium () {\n      return false\n    },\n    hasClickListener (): boolean {\n      return Boolean(\n        this.listeners$.click || this.listeners$['!click']\n      )\n    },\n  },\n\n  methods: {\n    getIcon (): VuetifyIcon {\n      let iconName = ''\n      if (this.$slots.default) iconName = this.$slots.default[0].text!.trim()\n\n      return remapInternalIcon(this, iconName)\n    },\n    getSize (): string | undefined {\n      const sizes = {\n        xSmall: this.xSmall,\n        small: this.small,\n        medium: this.medium,\n        large: this.large,\n        xLarge: this.xLarge,\n      }\n\n      const explicitSize = keys(sizes).find(key => sizes[key])\n\n      return (\n        (explicitSize && SIZE_MAP[explicitSize]) || convertToUnit(this.size)\n      )\n    },\n    // Component data for both font icon and SVG wrapper span\n    getDefaultData (): VNodeData {\n      return {\n        staticClass: 'v-icon notranslate',\n        class: {\n          'v-icon--disabled': this.disabled,\n          'v-icon--left': this.left,\n          'v-icon--link': this.hasClickListener,\n          'v-icon--right': this.right,\n          'v-icon--dense': this.dense,\n        },\n        attrs: {\n          'aria-hidden': !this.hasClickListener,\n          disabled: this.hasClickListener && this.disabled,\n          type: this.hasClickListener ? 'button' : undefined,\n          ...this.attrs$,\n        },\n        on: this.listeners$,\n      }\n    },\n    getSvgWrapperData () {\n      const fontSize = this.getSize()\n      const wrapperData = {\n        ...this.getDefaultData(),\n        style: fontSize ? {\n          fontSize,\n          height: fontSize,\n          width: fontSize,\n        } : undefined,\n      }\n      this.applyColors(wrapperData)\n\n      return wrapperData\n    },\n    applyColors (data: VNodeData): void {\n      data.class = { ...data.class, ...this.themeClasses }\n      this.setTextColor(this.color, data)\n    },\n    renderFontIcon (icon: string, h: CreateElement): VNode {\n      const newChildren: VNodeChildren = []\n      const data = this.getDefaultData()\n\n      let iconType = 'material-icons'\n      // Material Icon delimiter is _\n      // https://material.io/icons/\n      const delimiterIndex = icon.indexOf('-')\n      const isMaterialIcon = delimiterIndex <= -1\n\n      if (isMaterialIcon) {\n        // Material icon uses ligatures.\n        newChildren.push(icon)\n      } else {\n        iconType = icon.slice(0, delimiterIndex)\n        if (isFontAwesome5(iconType)) iconType = ''\n      }\n\n      data.class[iconType] = true\n      data.class[icon] = !isMaterialIcon\n\n      const fontSize = this.getSize()\n      if (fontSize) data.style = { fontSize }\n\n      this.applyColors(data)\n\n      return h(this.hasClickListener ? 'button' : this.tag, data, newChildren)\n    },\n    renderSvgIcon (icon: string, h: CreateElement): VNode {\n      const svgData: VNodeData = {\n        class: 'v-icon__svg',\n        attrs: {\n          xmlns: 'http://www.w3.org/2000/svg',\n          viewBox: '0 0 24 24',\n          role: 'img',\n          'aria-hidden': true,\n        },\n      }\n\n      const size = this.getSize()\n      if (size) {\n        svgData.style = {\n          fontSize: size,\n          height: size,\n          width: size,\n        }\n      }\n\n      return h(this.hasClickListener ? 'button' : 'span', this.getSvgWrapperData(), [\n        h('svg', svgData, [\n          h('path', {\n            attrs: {\n              d: icon,\n            },\n          }),\n        ]),\n      ])\n    },\n    renderSvgIconComponent (\n      icon: VuetifyIconComponent,\n      h: CreateElement\n    ): VNode {\n      const data: VNodeData = {\n        class: {\n          'v-icon__component': true,\n        },\n      }\n\n      const size = this.getSize()\n      if (size) {\n        data.style = {\n          fontSize: size,\n          height: size,\n          width: size,\n        }\n      }\n\n      this.applyColors(data)\n\n      const component = icon.component\n      data.props = icon.props\n      data.nativeOn = data.on\n\n      return h(this.hasClickListener ? 'button' : 'span', this.getSvgWrapperData(), [\n        h(component, data),\n      ])\n    },\n  },\n\n  render (h: CreateElement): VNode {\n    const icon = this.getIcon()\n\n    if (typeof icon === 'string') {\n      if (isSvgPath(icon)) {\n        return this.renderSvgIcon(icon, h)\n      }\n      return this.renderFontIcon(icon, h)\n    }\n\n    return this.renderSvgIconComponent(icon, h)\n  },\n})\n\nexport default Vue.extend({\n  name: 'v-icon',\n\n  $_wrapperFor: VIcon,\n\n  functional: true,\n\n  render (h, { data, children }): VNode {\n    let iconName = ''\n\n    // Support usage of v-text and v-html\n    if (data.domProps) {\n      iconName = data.domProps.textContent ||\n        data.domProps.innerHTML ||\n        iconName\n\n      // Remove nodes so it doesn't\n      // overwrite our changes\n      delete data.domProps.textContent\n      delete data.domProps.innerHTML\n    }\n\n    return h(VIcon, data, iconName ? [iconName] : children)\n  },\n})\n","// Mixins\nimport Themeable from '../../mixins/themeable'\n\n// Types\nimport { VNode } from 'vue'\n\n/* @vue/component */\nexport default Themeable.extend({\n  name: 'v-theme-provider',\n\n  props: { root: Boolean },\n\n  computed: {\n    isDark (): boolean {\n      return this.root\n        ? this.rootIsDark\n        : Themeable.options.computed.isDark.call(this)\n    },\n  },\n\n  render (): VNode {\n    /* istanbul ignore next */\n    return (\n      this.$slots.default! &&\n      this.$slots.default!.find(node => !node.isComment && node.text !== ' ')!\n    )\n  },\n})\n","import Vue from 'vue'\n\n/**\n * Delayable\n *\n * @mixin\n *\n * Changes the open or close delay time for elements\n */\nexport default Vue.extend<Vue & { isActive?: boolean }>().extend({\n  name: 'delayable',\n\n  props: {\n    openDelay: {\n      type: [Number, String],\n      default: 0,\n    },\n    closeDelay: {\n      type: [Number, String],\n      default: 0,\n    },\n  },\n\n  data: () => ({\n    openTimeout: undefined as number | undefined,\n    closeTimeout: undefined as number | undefined,\n  }),\n\n  methods: {\n    /**\n     * Clear any pending delay timers from executing\n     */\n    clearDelay (): void {\n      clearTimeout(this.openTimeout)\n      clearTimeout(this.closeTimeout)\n    },\n    /**\n     * Runs callback after a specified delay\n     */\n    runDelay (type: 'open' | 'close', cb?: () => void): void {\n      this.clearDelay()\n\n      const delay = parseInt((this as any)[`${type}Delay`], 10)\n\n      ;(this as any)[`${type}Timeout`] = setTimeout(cb || (() => {\n        this.isActive = { open: true, close: false }[type]\n      }), delay)\n    },\n  },\n})\n","// Mixins\nimport Delayable from '../delayable'\nimport Toggleable from '../toggleable'\n\n// Utilities\nimport mixins from '../../util/mixins'\nimport { getSlot, getSlotType } from '../../util/helpers'\nimport { consoleError } from '../../util/console'\n\n// Types\nimport { VNode, PropType } from 'vue'\n\ntype Listeners = Dictionary<(e: MouseEvent & KeyboardEvent & FocusEvent) => void>\n\nconst baseMixins = mixins(\n  Delayable,\n  Toggleable\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'activatable',\n\n  props: {\n    activator: {\n      default: null as unknown as PropType<string | HTMLElement | VNode | Element | null>,\n      validator: (val: string | object) => {\n        return ['string', 'object'].includes(typeof val)\n      },\n    },\n    disabled: Boolean,\n    internalActivator: Boolean,\n    openOnHover: Boolean,\n    openOnFocus: Boolean,\n  },\n\n  data: () => ({\n    // Do not use this directly, call getActivator() instead\n    activatorElement: null as HTMLElement | null,\n    activatorNode: [] as VNode[],\n    events: ['click', 'mouseenter', 'mouseleave', 'focus'],\n    listeners: {} as Listeners,\n  }),\n\n  watch: {\n    activator: 'resetActivator',\n    openOnFocus: 'resetActivator',\n    openOnHover: 'resetActivator',\n  },\n\n  mounted () {\n    const slotType = getSlotType(this, 'activator', true)\n\n    if (slotType && ['v-slot', 'normal'].includes(slotType)) {\n      consoleError(`The activator slot must be bound, try '<template v-slot:activator=\"{ on }\"><v-btn v-on=\"on\">'`, this)\n    }\n\n    this.addActivatorEvents()\n  },\n\n  beforeDestroy () {\n    this.removeActivatorEvents()\n  },\n\n  methods: {\n    addActivatorEvents () {\n      if (\n        !this.activator ||\n        this.disabled ||\n        !this.getActivator()\n      ) return\n\n      this.listeners = this.genActivatorListeners()\n      const keys = Object.keys(this.listeners)\n\n      for (const key of keys) {\n        this.getActivator()!.addEventListener(key, this.listeners[key] as any)\n      }\n    },\n    genActivator () {\n      const node = getSlot(this, 'activator', Object.assign(this.getValueProxy(), {\n        on: this.genActivatorListeners(),\n        attrs: this.genActivatorAttributes(),\n      })) || []\n\n      this.activatorNode = node\n\n      return node\n    },\n    genActivatorAttributes () {\n      return {\n        role: 'button',\n        'aria-haspopup': true,\n        'aria-expanded': String(this.isActive),\n      }\n    },\n    genActivatorListeners () {\n      if (this.disabled) return {}\n\n      const listeners: Listeners = {}\n\n      if (this.openOnHover) {\n        listeners.mouseenter = (e: MouseEvent) => {\n          this.getActivator(e)\n          this.runDelay('open')\n        }\n        listeners.mouseleave = (e: MouseEvent) => {\n          this.getActivator(e)\n          this.runDelay('close')\n        }\n      } else {\n        listeners.click = (e: MouseEvent) => {\n          const activator = this.getActivator(e)\n          if (activator) activator.focus()\n\n          e.stopPropagation()\n\n          this.isActive = !this.isActive\n        }\n      }\n\n      if (this.openOnFocus) {\n        listeners.focus = (e: FocusEvent) => {\n          this.getActivator(e)\n\n          e.stopPropagation()\n\n          this.isActive = !this.isActive\n        }\n      }\n\n      return listeners\n    },\n    getActivator (e?: Event): HTMLElement | null {\n      // If we've already fetched the activator, re-use\n      if (this.activatorElement) return this.activatorElement\n\n      let activator = null\n\n      if (this.activator) {\n        const target = this.internalActivator ? this.$el : document\n\n        if (typeof this.activator === 'string') {\n          // Selector\n          activator = target.querySelector(this.activator)\n        } else if ((this.activator as any).$el) {\n          // Component (ref)\n          activator = (this.activator as any).$el\n        } else {\n          // HTMLElement | Element\n          activator = this.activator\n        }\n      } else if (this.activatorNode.length === 1 || (this.activatorNode.length && !e)) {\n        // Use the contents of the activator slot\n        // There's either only one element in it or we\n        // don't have a click event to use as a last resort\n        const vm = this.activatorNode[0].componentInstance\n        if (\n          vm &&\n          vm.$options.mixins && //                         Activatable is indirectly used via Menuable\n          vm.$options.mixins.some((m: any) => m.options && ['activatable', 'menuable'].includes(m.options.name))\n        ) {\n          // Activator is actually another activatible component, use its activator (#8846)\n          activator = (vm as any).getActivator()\n        } else {\n          activator = this.activatorNode[0].elm as HTMLElement\n        }\n      } else if (e) {\n        // Activated by a click or focus event\n        activator = (e.currentTarget || e.target) as HTMLElement\n      }\n\n      // The activator should only be a valid element (Ignore comments and text nodes)\n      this.activatorElement = activator?.nodeType === Node.ELEMENT_NODE ? activator : null\n\n      return this.activatorElement\n    },\n    getContentSlot () {\n      return getSlot(this, 'default', this.getValueProxy(), true)\n    },\n    getValueProxy (): object {\n      const self = this\n      return {\n        get value () {\n          return self.isActive\n        },\n        set value (isActive: boolean) {\n          self.isActive = isActive\n        },\n      }\n    },\n    removeActivatorEvents () {\n      if (\n        !this.activator ||\n        !this.activatorElement\n      ) return\n\n      const keys = Object.keys(this.listeners)\n\n      for (const key of keys) {\n        (this.activatorElement as any).removeEventListener(key, this.listeners[key])\n      }\n\n      this.listeners = {}\n    },\n    resetActivator () {\n      this.removeActivatorEvents()\n      this.activatorElement = null\n      this.getActivator()\n      this.addActivatorEvents()\n    },\n  },\n})\n","import Vue from 'vue'\n\nimport mixins from '../../util/mixins'\nimport { VOverlay } from '../../components/VOverlay'\n\ninterface options extends Vue {\n  $el: HTMLElement\n  $refs: {\n    content: HTMLElement\n  }\n  overlay?: InstanceType<typeof VOverlay>\n}\n\ninterface DependentInstance extends Vue {\n  isActive?: boolean\n  isDependent?: boolean\n}\n\nfunction searchChildren (children: Vue[]): DependentInstance[] {\n  const results = []\n  for (let index = 0; index < children.length; index++) {\n    const child = children[index] as DependentInstance\n    if (child.isActive && child.isDependent) {\n      results.push(child)\n    } else {\n      results.push(...searchChildren(child.$children))\n    }\n  }\n\n  return results\n}\n\n/* @vue/component */\nexport default mixins<options>().extend({\n  name: 'dependent',\n\n  data () {\n    return {\n      closeDependents: true,\n      isActive: false,\n      isDependent: true,\n    }\n  },\n\n  watch: {\n    isActive (val) {\n      if (val) return\n\n      const openDependents = this.getOpenDependents()\n      for (let index = 0; index < openDependents.length; index++) {\n        openDependents[index].isActive = false\n      }\n    },\n  },\n\n  methods: {\n    getOpenDependents (): any[] {\n      if (this.closeDependents) return searchChildren(this.$children)\n\n      return []\n    },\n    getOpenDependentElements (): HTMLElement[] {\n      const result = []\n      const openDependents = this.getOpenDependents()\n\n      for (let index = 0; index < openDependents.length; index++) {\n        result.push(...openDependents[index].getClickableDependentElements())\n      }\n\n      return result\n    },\n    getClickableDependentElements (): HTMLElement[] {\n      const result = [this.$el]\n      if (this.$refs.content) result.push(this.$refs.content)\n      if (this.overlay) result.push(this.overlay.$el as HTMLElement)\n      result.push(...this.getOpenDependentElements())\n\n      return result\n    },\n  },\n})\n","// Mixins\nimport Bootable from '../bootable'\n\n// Utilities\nimport { getObjectValueByPath } from '../../util/helpers'\nimport mixins, { ExtractVue } from '../../util/mixins'\nimport { consoleWarn } from '../../util/console'\n\n// Types\nimport Vue, { PropOptions } from 'vue'\nimport { VNode } from 'vue/types'\n\ninterface options extends Vue {\n  $el: HTMLElement\n  $refs: {\n    content: HTMLElement\n  }\n}\n\nfunction validateAttachTarget (val: any) {\n  const type = typeof val\n\n  if (type === 'boolean' || type === 'string') return true\n\n  return val.nodeType === Node.ELEMENT_NODE\n}\n\n/* @vue/component */\nexport default mixins<options &\n  /* eslint-disable indent */\n  ExtractVue<typeof Bootable>\n  /* eslint-enable indent */\n>(Bootable).extend({\n  name: 'detachable',\n\n  props: {\n    attach: {\n      default: false,\n      validator: validateAttachTarget,\n    } as PropOptions<boolean | string | Element>,\n    contentClass: {\n      type: String,\n      default: '',\n    },\n  },\n\n  data: () => ({\n    activatorNode: null as null | VNode | VNode[],\n    hasDetached: false,\n  }),\n\n  watch: {\n    attach () {\n      this.hasDetached = false\n      this.initDetach()\n    },\n    hasContent () {\n      this.$nextTick(this.initDetach)\n    },\n  },\n\n  beforeMount () {\n    this.$nextTick(() => {\n      if (this.activatorNode) {\n        const activator = Array.isArray(this.activatorNode) ? this.activatorNode : [this.activatorNode]\n\n        activator.forEach(node => {\n          if (!node.elm) return\n          if (!this.$el.parentNode) return\n\n          const target = this.$el === this.$el.parentNode.firstChild\n            ? this.$el\n            : this.$el.nextSibling\n\n          this.$el.parentNode.insertBefore(node.elm, target)\n        })\n      }\n    })\n  },\n\n  mounted () {\n    this.hasContent && this.initDetach()\n  },\n\n  deactivated () {\n    this.isActive = false\n  },\n\n  beforeDestroy () {\n    // IE11 Fix\n    try {\n      if (\n        this.$refs.content &&\n        this.$refs.content.parentNode\n      ) {\n        this.$refs.content.parentNode.removeChild(this.$refs.content)\n      }\n\n      if (this.activatorNode) {\n        const activator = Array.isArray(this.activatorNode) ? this.activatorNode : [this.activatorNode]\n        activator.forEach(node => {\n          node.elm &&\n            node.elm.parentNode &&\n            node.elm.parentNode.removeChild(node.elm)\n        })\n      }\n    } catch (e) { console.log(e) } /* eslint-disable-line no-console */\n  },\n\n  methods: {\n    getScopeIdAttrs () {\n      const scopeId = getObjectValueByPath(this.$vnode, 'context.$options._scopeId')\n\n      return scopeId && {\n        [scopeId]: '',\n      }\n    },\n    initDetach () {\n      if (this._isDestroyed ||\n        !this.$refs.content ||\n        this.hasDetached ||\n        // Leave menu in place if attached\n        // and dev has not changed target\n        this.attach === '' || // If used as a boolean prop (<v-menu attach>)\n        this.attach === true || // If bound to a boolean (<v-menu :attach=\"true\">)\n        this.attach === 'attach' // If bound as boolean prop in pug (v-menu(attach))\n      ) return\n\n      let target\n      if (this.attach === false) {\n        // Default, detach to app\n        target = document.querySelector('[data-app]')\n      } else if (typeof this.attach === 'string') {\n        // CSS selector\n        target = document.querySelector(this.attach)\n      } else {\n        // DOM Element\n        target = this.attach\n      }\n\n      if (!target) {\n        consoleWarn(`Unable to locate target ${this.attach || '[data-app]'}`, this)\n        return\n      }\n\n      target.appendChild(this.$refs.content)\n\n      this.hasDetached = true\n    },\n  },\n})\n","// Styles\nimport './VOverlay.sass'\n\n// Mixins\nimport Colorable from './../../mixins/colorable'\nimport Themeable from '../../mixins/themeable'\nimport Toggleable from './../../mixins/toggleable'\n\n// Utilities\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\n\n/* @vue/component */\nexport default mixins(\n  Colorable,\n  Themeable,\n  Toggleable\n).extend({\n  name: 'v-overlay',\n\n  props: {\n    absolute: Boolean,\n    color: {\n      type: String,\n      default: '#212121',\n    },\n    dark: {\n      type: Boolean,\n      default: true,\n    },\n    opacity: {\n      type: [Number, String],\n      default: 0.46,\n    },\n    value: {\n      default: true,\n    },\n    zIndex: {\n      type: [Number, String],\n      default: 5,\n    },\n  },\n\n  computed: {\n    __scrim (): VNode {\n      const data = this.setBackgroundColor(this.color, {\n        staticClass: 'v-overlay__scrim',\n        style: {\n          opacity: this.computedOpacity,\n        },\n      })\n\n      return this.$createElement('div', data)\n    },\n    classes (): object {\n      return {\n        'v-overlay--absolute': this.absolute,\n        'v-overlay--active': this.isActive,\n        ...this.themeClasses,\n      }\n    },\n    computedOpacity (): number {\n      return Number(this.isActive ? this.opacity : 0)\n    },\n    styles (): object {\n      return {\n        zIndex: this.zIndex,\n      }\n    },\n  },\n\n  methods: {\n    genContent () {\n      return this.$createElement('div', {\n        staticClass: 'v-overlay__content',\n      }, this.$slots.default)\n    },\n  },\n\n  render (h): VNode {\n    const children = [this.__scrim]\n\n    if (this.isActive) children.push(this.genContent())\n\n    return h('div', {\n      staticClass: 'v-overlay',\n      class: this.classes,\n      style: this.styles,\n    }, children)\n  },\n})\n","import VOverlay from './VOverlay'\n\nexport { VOverlay }\n\nexport default VOverlay\n","// Components\nimport VOverlay from '../../components/VOverlay'\n\n// Utilities\nimport {\n  keyCodes,\n  addOnceEventListener,\n  addPassiveEventListener,\n  getZIndex,\n} from '../../util/helpers'\n\n// Types\nimport Vue from 'vue'\n\ninterface Toggleable extends Vue {\n  isActive?: boolean\n}\n\ninterface Stackable extends Vue {\n  activeZIndex: number\n}\n\ninterface options {\n  absolute?: boolean\n  $refs: {\n    dialog?: HTMLElement\n    content?: HTMLElement\n  }\n}\n\n/* @vue/component */\nexport default Vue.extend<Vue & Toggleable & Stackable & options>().extend({\n  name: 'overlayable',\n\n  props: {\n    hideOverlay: Boolean,\n    overlayColor: String,\n    overlayOpacity: [Number, String],\n  },\n\n  data () {\n    return {\n      animationFrame: 0,\n      overlay: null as InstanceType<typeof VOverlay> | null,\n    }\n  },\n\n  watch: {\n    hideOverlay (value) {\n      if (!this.isActive) return\n\n      if (value) this.removeOverlay()\n      else this.genOverlay()\n    },\n  },\n\n  beforeDestroy () {\n    this.removeOverlay()\n  },\n\n  methods: {\n    createOverlay () {\n      const overlay = new VOverlay({\n        propsData: {\n          absolute: this.absolute,\n          value: false,\n          color: this.overlayColor,\n          opacity: this.overlayOpacity,\n        },\n      })\n\n      overlay.$mount()\n\n      const parent = this.absolute\n        ? this.$el.parentNode\n        : document.querySelector('[data-app]')\n\n      parent && parent.insertBefore(overlay.$el, parent.firstChild)\n\n      this.overlay = overlay\n    },\n    genOverlay () {\n      this.hideScroll()\n\n      if (this.hideOverlay) return\n\n      if (!this.overlay) this.createOverlay()\n\n      this.animationFrame = requestAnimationFrame(() => {\n        if (!this.overlay) return\n\n        if (this.activeZIndex !== undefined) {\n          this.overlay.zIndex = String(this.activeZIndex - 1)\n        } else if (this.$el) {\n          this.overlay.zIndex = getZIndex(this.$el)\n        }\n\n        this.overlay.value = true\n      })\n\n      return true\n    },\n    /** removeOverlay(false) will not restore the scollbar afterwards */\n    removeOverlay (showScroll = true) {\n      if (this.overlay) {\n        addOnceEventListener(this.overlay.$el, 'transitionend', () => {\n          if (\n            !this.overlay ||\n            !this.overlay.$el ||\n            !this.overlay.$el.parentNode ||\n            this.overlay.value ||\n            this.isActive\n          ) return\n\n          this.overlay.$el.parentNode.removeChild(this.overlay.$el)\n          this.overlay.$destroy()\n          this.overlay = null\n        })\n\n        // Cancel animation frame in case\n        // overlay is removed before it\n        // has finished its animation\n        cancelAnimationFrame(this.animationFrame)\n\n        this.overlay.value = false\n      }\n\n      showScroll && this.showScroll()\n    },\n    scrollListener (e: WheelEvent & KeyboardEvent) {\n      if (e.type === 'keydown') {\n        if (\n          ['INPUT', 'TEXTAREA', 'SELECT'].includes((e.target as Element).tagName) ||\n          // https://github.com/vuetifyjs/vuetify/issues/4715\n          (e.target as HTMLElement).isContentEditable\n        ) return\n\n        const up = [keyCodes.up, keyCodes.pageup]\n        const down = [keyCodes.down, keyCodes.pagedown]\n\n        if (up.includes(e.keyCode)) {\n          (e as any).deltaY = -1\n        } else if (down.includes(e.keyCode)) {\n          (e as any).deltaY = 1\n        } else {\n          return\n        }\n      }\n\n      if (e.target === this.overlay ||\n        (e.type !== 'keydown' && e.target === document.body) ||\n        this.checkPath(e)) e.preventDefault()\n    },\n    hasScrollbar (el?: Element) {\n      if (!el || el.nodeType !== Node.ELEMENT_NODE) return false\n\n      const style = window.getComputedStyle(el)\n      return ['auto', 'scroll'].includes(style.overflowY!) && el.scrollHeight > el.clientHeight\n    },\n    shouldScroll (el: Element, delta: number): boolean {\n      if (el.hasAttribute('data-app')) return false\n\n      const alreadyAtTop = el.scrollTop === 0\n      const alreadyAtBottom = el.scrollTop + el.clientHeight === el.scrollHeight\n      const scrollingUp = delta < 0\n      const scrollingDown = delta > 0\n\n      if (!alreadyAtTop && scrollingUp) return true\n      if (!alreadyAtBottom && scrollingDown) return true\n      if ((alreadyAtTop || alreadyAtBottom)) {\n        return this.shouldScroll(el.parentNode as Element, delta)\n      }\n\n      return false\n    },\n    isInside (el: Element, parent: Element): boolean {\n      if (el === parent) {\n        return true\n      } else if (el === null || el === document.body) {\n        return false\n      } else {\n        return this.isInside(el.parentNode as Element, parent)\n      }\n    },\n    checkPath (e: WheelEvent) {\n      const path = e.path || this.composedPath(e)\n      const delta = e.deltaY\n\n      if (e.type === 'keydown' && path[0] === document.body) {\n        const dialog = this.$refs.dialog\n        // getSelection returns null in firefox in some edge cases, can be ignored\n        const selected = window.getSelection()!.anchorNode as Element\n        if (dialog && this.hasScrollbar(dialog) && this.isInside(selected, dialog)) {\n          return !this.shouldScroll(dialog, delta)\n        }\n        return true\n      }\n\n      for (let index = 0; index < path.length; index++) {\n        const el = path[index]\n\n        if (el === document) return true\n        if (el === document.documentElement) return true\n        if (el === this.$refs.content) return true\n\n        if (this.hasScrollbar(el as Element)) return !this.shouldScroll(el as Element, delta)\n      }\n\n      return true\n    },\n    /**\n     * Polyfill for Event.prototype.composedPath\n     */\n    composedPath (e: WheelEvent): EventTarget[] {\n      if (e.composedPath) return e.composedPath()\n\n      const path = []\n      let el = e.target as Element\n\n      while (el) {\n        path.push(el)\n\n        if (el.tagName === 'HTML') {\n          path.push(document)\n          path.push(window)\n\n          return path\n        }\n\n        el = el.parentElement!\n      }\n      return path\n    },\n    hideScroll () {\n      if (this.$vuetify.breakpoint.smAndDown) {\n        document.documentElement!.classList.add('overflow-y-hidden')\n      } else {\n        addPassiveEventListener(window, 'wheel', this.scrollListener as EventHandlerNonNull, { passive: false })\n        window.addEventListener('keydown', this.scrollListener as EventHandlerNonNull)\n      }\n    },\n    showScroll () {\n      document.documentElement!.classList.remove('overflow-y-hidden')\n      window.removeEventListener('wheel', this.scrollListener as EventHandlerNonNull)\n      window.removeEventListener('keydown', this.scrollListener as EventHandlerNonNull)\n    },\n  },\n})\n","import Vue from 'vue'\n\n/* @vue/component */\nexport default Vue.extend({\n  name: 'returnable',\n\n  props: {\n    returnValue: null as any,\n  },\n\n  data: () => ({\n    isActive: false,\n    originalValue: null as any,\n  }),\n\n  watch: {\n    isActive (val) {\n      if (val) {\n        this.originalValue = this.returnValue\n      } else {\n        this.$emit('update:return-value', this.originalValue)\n      }\n    },\n  },\n\n  methods: {\n    save (value: any) {\n      this.originalValue = value\n      setTimeout(() => {\n        this.isActive = false\n      })\n    },\n  },\n})\n","import Vue from 'vue'\n\nimport { getZIndex } from '../../util/helpers'\n\ninterface options extends Vue {\n  $refs: {\n    content: Element\n  }\n}\n\n/* @vue/component */\nexport default Vue.extend<options>().extend({\n  name: 'stackable',\n\n  data () {\n    return {\n      stackElement: null as Element | null,\n      stackExclude: null as Element[] | null,\n      stackMinZIndex: 0,\n      isActive: false,\n    }\n  },\n  computed: {\n    activeZIndex (): number {\n      if (typeof window === 'undefined') return 0\n\n      const content = this.stackElement || this.$refs.content\n      // Return current zindex if not active\n\n      const index = !this.isActive\n        ? getZIndex(content)\n        : this.getMaxZIndex(this.stackExclude || [content]) + 2\n\n      if (index == null) return index\n\n      // Return max current z-index (excluding self) + 2\n      // (2 to leave room for an overlay below, if needed)\n      return parseInt(index)\n    },\n  },\n  methods: {\n    getMaxZIndex (exclude: Element[] = []) {\n      const base = this.$el\n      // Start with lowest allowed z-index or z-index of\n      // base component's element, whichever is greater\n      const zis = [this.stackMinZIndex, getZIndex(base)]\n      // Convert the NodeList to an array to\n      // prevent an Edge bug with Symbol.iterator\n      // https://github.com/vuetifyjs/vuetify/issues/2146\n      const activeElements = [\n        ...document.getElementsByClassName('v-menu__content--active'),\n        ...document.getElementsByClassName('v-dialog__content--active'),\n      ]\n\n      // Get z-index for all active dialogs\n      for (let index = 0; index < activeElements.length; index++) {\n        if (!exclude.includes(activeElements[index])) {\n          zis.push(getZIndex(activeElements[index]))\n        }\n      }\n\n      return Math.max(...zis)\n    },\n  },\n})\n","import { attachedRoot } from '../../util/dom'\nimport { VNodeDirective } from 'vue/types/vnode'\n\ninterface ClickOutsideBindingArgs {\n  handler: (e: Event) => void\n  closeConditional?: (e: Event) => boolean\n  include?: () => HTMLElement[]\n}\n\ninterface ClickOutsideDirective extends VNodeDirective {\n  value?: ((e: Event) => void) | ClickOutsideBindingArgs\n}\n\nfunction defaultConditional () {\n  return true\n}\n\nfunction checkEvent (e: PointerEvent, el: HTMLElement, binding: ClickOutsideDirective): boolean {\n  // The include element callbacks below can be expensive\n  // so we should avoid calling them when we're not active.\n  // Explicitly check for false to allow fallback compatibility\n  // with non-toggleable components\n  if (!e || checkIsActive(e, binding) === false) return false\n\n  // If we're clicking inside the shadowroot, then the app root doesn't get the same\n  // level of introspection as to _what_ we're clicking. We want to check to see if\n  // our target is the shadowroot parent container, and if it is, ignore.\n  const root = attachedRoot(el)\n  if (root instanceof ShadowRoot && root.host === e.target) return false\n\n  // Check if additional elements were passed to be included in check\n  // (click must be outside all included elements, if any)\n  const elements = ((typeof binding.value === 'object' && binding.value.include) || (() => []))()\n  // Add the root element for the component this directive was defined on\n  elements.push(el)\n\n  // Check if it's a click outside our elements, and then if our callback returns true.\n  // Non-toggleable components should take action in their callback and return falsy.\n  // Toggleable can return true if it wants to deactivate.\n  // Note that, because we're in the capture phase, this callback will occur before\n  // the bubbling click event on any outside elements.\n  return !elements.some(el => el.contains(e.target as Node))\n}\n\nfunction checkIsActive (e: PointerEvent, binding: ClickOutsideDirective): boolean | void {\n  const isActive = (typeof binding.value === 'object' && binding.value.closeConditional) || defaultConditional\n\n  return isActive(e)\n}\n\nfunction directive (e: PointerEvent, el: HTMLElement, binding: ClickOutsideDirective) {\n  const handler = typeof binding.value === 'function' ? binding.value : binding.value!.handler\n\n  el._clickOutside!.lastMousedownWasOutside && checkEvent(e, el, binding) && setTimeout(() => {\n    checkIsActive(e, binding) && handler && handler(e)\n  }, 0)\n}\n\nfunction handleShadow (el: HTMLElement, callback: Function): void {\n  const root = attachedRoot(el)\n\n  callback(document.body)\n\n  if (root instanceof ShadowRoot) {\n    callback(root)\n  }\n}\n\nexport const ClickOutside = {\n  // [data-app] may not be found\n  // if using bind, inserted makes\n  // sure that the root element is\n  // available, iOS does not support\n  // clicks on body\n  inserted (el: HTMLElement, binding: ClickOutsideDirective) {\n    const onClick = (e: Event) => directive(e as PointerEvent, el, binding)\n    const onMousedown = (e: Event) => {\n      el._clickOutside!.lastMousedownWasOutside = checkEvent(e as PointerEvent, el, binding)\n    }\n\n    handleShadow(el, (app: HTMLElement) => {\n      app.addEventListener('click', onClick, true)\n      app.addEventListener('mousedown', onMousedown, true)\n    })\n\n    el._clickOutside = {\n      lastMousedownWasOutside: true,\n      onClick,\n      onMousedown,\n    }\n  },\n\n  unbind (el: HTMLElement) {\n    if (!el._clickOutside) return\n\n    handleShadow(el, (app: HTMLElement) => {\n      if (!app || !el._clickOutside) return\n      app.removeEventListener('click', el._clickOutside.onClick, true)\n      app.removeEventListener('mousedown', el._clickOutside.onMousedown, true)\n    })\n\n    delete el._clickOutside\n  },\n}\n\nexport default ClickOutside\n","// Styles\nimport './VDialog.sass'\n\n// Components\nimport { VThemeProvider } from '../VThemeProvider'\n\n// Mixins\nimport Activatable from '../../mixins/activatable'\nimport Dependent from '../../mixins/dependent'\nimport Detachable from '../../mixins/detachable'\nimport Overlayable from '../../mixins/overlayable'\nimport Returnable from '../../mixins/returnable'\nimport Stackable from '../../mixins/stackable'\nimport Toggleable from '../../mixins/toggleable'\n\n// Directives\nimport ClickOutside from '../../directives/click-outside'\n\n// Helpers\nimport mixins from '../../util/mixins'\nimport { removed } from '../../util/console'\nimport {\n  convertToUnit,\n  keyCodes,\n} from '../../util/helpers'\n\n// Types\nimport { VNode, VNodeData } from 'vue'\n\nconst baseMixins = mixins(\n  Activatable,\n  Dependent,\n  Detachable,\n  Overlayable,\n  Returnable,\n  Stackable,\n  Toggleable\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'v-dialog',\n\n  directives: { ClickOutside },\n\n  props: {\n    dark: Boolean,\n    disabled: Boolean,\n    fullscreen: Boolean,\n    light: Boolean,\n    maxWidth: {\n      type: [String, Number],\n      default: 'none',\n    },\n    noClickAnimation: Boolean,\n    origin: {\n      type: String,\n      default: 'center center',\n    },\n    persistent: Boolean,\n    retainFocus: {\n      type: Boolean,\n      default: true,\n    },\n    scrollable: Boolean,\n    transition: {\n      type: [String, Boolean],\n      default: 'dialog-transition',\n    },\n    width: {\n      type: [String, Number],\n      default: 'auto',\n    },\n  },\n\n  data () {\n    return {\n      activatedBy: null as EventTarget | null,\n      animate: false,\n      animateTimeout: -1,\n      isActive: !!this.value,\n      stackMinZIndex: 200,\n      previousActiveElement: null as HTMLElement | null,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        [(`v-dialog ${this.contentClass}`).trim()]: true,\n        'v-dialog--active': this.isActive,\n        'v-dialog--persistent': this.persistent,\n        'v-dialog--fullscreen': this.fullscreen,\n        'v-dialog--scrollable': this.scrollable,\n        'v-dialog--animated': this.animate,\n      }\n    },\n    contentClasses (): object {\n      return {\n        'v-dialog__content': true,\n        'v-dialog__content--active': this.isActive,\n      }\n    },\n    hasActivator (): boolean {\n      return Boolean(\n        !!this.$slots.activator ||\n        !!this.$scopedSlots.activator\n      )\n    },\n  },\n\n  watch: {\n    isActive (val) {\n      if (val) {\n        this.show()\n        this.hideScroll()\n      } else {\n        this.removeOverlay()\n        this.unbind()\n        this.previousActiveElement?.focus()\n      }\n    },\n    fullscreen (val) {\n      if (!this.isActive) return\n\n      if (val) {\n        this.hideScroll()\n        this.removeOverlay(false)\n      } else {\n        this.showScroll()\n        this.genOverlay()\n      }\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('full-width')) {\n      removed('full-width', this)\n    }\n  },\n\n  beforeMount () {\n    this.$nextTick(() => {\n      this.isBooted = this.isActive\n      this.isActive && this.show()\n    })\n  },\n\n  beforeDestroy () {\n    if (typeof window !== 'undefined') this.unbind()\n  },\n\n  methods: {\n    animateClick () {\n      this.animate = false\n      // Needed for when clicking very fast\n      // outside of the dialog\n      this.$nextTick(() => {\n        this.animate = true\n        window.clearTimeout(this.animateTimeout)\n        this.animateTimeout = window.setTimeout(() => (this.animate = false), 150)\n      })\n    },\n    closeConditional (e: Event) {\n      const target = e.target as HTMLElement\n      // Ignore the click if the dialog is closed or destroyed,\n      // if it was on an element inside the content,\n      // if it was dragged onto the overlay (#6969),\n      // or if this isn't the topmost dialog (#9907)\n      return !(\n        this._isDestroyed ||\n        !this.isActive ||\n        this.$refs.content.contains(target) ||\n        (this.overlay && target && !this.overlay.$el.contains(target))\n      ) && this.activeZIndex >= this.getMaxZIndex()\n    },\n    hideScroll () {\n      if (this.fullscreen) {\n        document.documentElement.classList.add('overflow-y-hidden')\n      } else {\n        Overlayable.options.methods.hideScroll.call(this)\n      }\n    },\n    show () {\n      !this.fullscreen && !this.hideOverlay && this.genOverlay()\n      // Double nextTick to wait for lazy content to be generated\n      this.$nextTick(() => {\n        this.$nextTick(() => {\n          this.previousActiveElement = document.activeElement as HTMLElement\n          this.$refs.content.focus()\n          this.bind()\n        })\n      })\n    },\n    bind () {\n      window.addEventListener('focusin', this.onFocusin)\n    },\n    unbind () {\n      window.removeEventListener('focusin', this.onFocusin)\n    },\n    onClickOutside (e: Event) {\n      this.$emit('click:outside', e)\n\n      if (this.persistent) {\n        this.noClickAnimation || this.animateClick()\n      } else {\n        this.isActive = false\n      }\n    },\n    onKeydown (e: KeyboardEvent) {\n      if (e.keyCode === keyCodes.esc && !this.getOpenDependents().length) {\n        if (!this.persistent) {\n          this.isActive = false\n          const activator = this.getActivator()\n          this.$nextTick(() => activator && (activator as HTMLElement).focus())\n        } else if (!this.noClickAnimation) {\n          this.animateClick()\n        }\n      }\n      this.$emit('keydown', e)\n    },\n    // On focus change, wrap focus to stay inside the dialog\n    // https://github.com/vuetifyjs/vuetify/issues/6892\n    onFocusin (e: Event) {\n      if (!e || !this.retainFocus) return\n\n      const target = e.target as HTMLElement\n\n      if (\n        !!target &&\n        // It isn't the document or the dialog body\n        ![document, this.$refs.content].includes(target) &&\n        // It isn't inside the dialog body\n        !this.$refs.content.contains(target) &&\n        // We're the topmost dialog\n        this.activeZIndex >= this.getMaxZIndex() &&\n        // It isn't inside a dependent element (like a menu)\n        !this.getOpenDependentElements().some(el => el.contains(target))\n        // So we must have focused something outside the dialog and its children\n      ) {\n        // Find and focus the first available element inside the dialog\n        const focusable = this.$refs.content.querySelectorAll('button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])')\n        const el = [...focusable].find(el => !el.hasAttribute('disabled')) as HTMLElement | undefined\n        el && el.focus()\n      }\n    },\n    genContent () {\n      return this.showLazyContent(() => [\n        this.$createElement(VThemeProvider, {\n          props: {\n            root: true,\n            light: this.light,\n            dark: this.dark,\n          },\n        }, [\n          this.$createElement('div', {\n            class: this.contentClasses,\n            attrs: {\n              role: 'document',\n              tabindex: this.isActive ? 0 : undefined,\n              ...this.getScopeIdAttrs(),\n            },\n            on: { keydown: this.onKeydown },\n            style: { zIndex: this.activeZIndex },\n            ref: 'content',\n          }, [this.genTransition()]),\n        ]),\n      ])\n    },\n    genTransition () {\n      const content = this.genInnerContent()\n\n      if (!this.transition) return content\n\n      return this.$createElement('transition', {\n        props: {\n          name: this.transition,\n          origin: this.origin,\n          appear: true,\n        },\n      }, [content])\n    },\n    genInnerContent () {\n      const data: VNodeData = {\n        class: this.classes,\n        ref: 'dialog',\n        directives: [\n          {\n            name: 'click-outside',\n            value: {\n              handler: this.onClickOutside,\n              closeConditional: this.closeConditional,\n              include: this.getOpenDependentElements,\n            },\n          },\n          { name: 'show', value: this.isActive },\n        ],\n        style: {\n          transformOrigin: this.origin,\n        },\n      }\n\n      if (!this.fullscreen) {\n        data.style = {\n          ...data.style as object,\n          maxWidth: this.maxWidth === 'none' ? undefined : convertToUnit(this.maxWidth),\n          width: this.width === 'auto' ? undefined : convertToUnit(this.width),\n        }\n      }\n\n      return this.$createElement('div', data, this.getContentSlot())\n    },\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-dialog__container',\n      class: {\n        'v-dialog__container--attached':\n          this.attach === '' ||\n          this.attach === true ||\n          this.attach === 'attach',\n      },\n      attrs: { role: 'dialog' },\n    }, [\n      this.genActivator(),\n      this.genContent(),\n    ])\n  },\n})\n","// Utilities\nimport { removed } from '../../util/console'\n\n// Types\nimport Vue, { VNode } from 'vue'\ninterface Toggleable extends Vue {\n  isActive?: boolean\n}\n\n/**\n * Bootable\n * @mixin\n *\n * Used to add lazy content functionality to components\n * Looks for change in \"isActive\" to automatically boot\n * Otherwise can be set manually\n */\n/* @vue/component */\nexport default Vue.extend<Vue & Toggleable>().extend({\n  name: 'bootable',\n\n  props: {\n    eager: Boolean,\n  },\n\n  data: () => ({\n    isBooted: false,\n  }),\n\n  computed: {\n    hasContent (): boolean | undefined {\n      return this.isBooted || this.eager || this.isActive\n    },\n  },\n\n  watch: {\n    isActive () {\n      this.isBooted = true\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if ('lazy' in this.$attrs) {\n      removed('lazy', this)\n    }\n  },\n\n  methods: {\n    showLazyContent (content?: () => VNode[]): VNode[] {\n      return (this.hasContent && content) ? content() : [this.$createElement()]\n    },\n  },\n})\n","/**\n * Returns:\n *  - 'null' if the node is not attached to the DOM\n *  - the root node (HTMLDocument | ShadowRoot) otherwise\n */\nexport function attachedRoot (node: Node): null | HTMLDocument | ShadowRoot {\n  /* istanbul ignore next */\n  if (typeof node.getRootNode !== 'function') {\n    // Shadow DOM not supported (IE11), lets find the root of this node\n    while (node.parentNode) node = node.parentNode\n\n    // The root parent is the document if the node is attached to the DOM\n    if (node !== document) return null\n\n    return document\n  }\n\n  const root = node.getRootNode()\n\n  // The composed root node is the document if the node is attached to the DOM\n  if (root !== document && root.getRootNode({ composed: true }) !== document) return null\n\n  return root as HTMLDocument | ShadowRoot\n}\n"],"sourceRoot":""}